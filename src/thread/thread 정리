[1] 프로세스와 쓰레드
프로세스 : 실행 중인 프로그램. 프로그램을 실행하면 OS로부터 실행에 필요한 자원(메모리)을 할당받아 프로세스가 된다.
프로세스 = 데이터 + 메모리 + 쓰레드 등 구성

프로세스의 자원을 이용하여 실제로 작업을 수행하는 것이 "쓰레드"
모든 프로세스는 하나 이상의 쓰레드가 존재
둘 이상의 쓰레드를 가진 프로세스는 "멀티쓰레드 프로세스"

윈도우나 유닉스 등 대부분 OS는 멀티태스킹(다중작업)을 지원

멀티쓰레딩의 장점
1. CPU의 사용률을 향상
2. 자원을 보다 효율적으로 사용
3. 사용자에 대한 응답성이 향상
4. 작업이 분리되어 코드가 간결
EX] 메신저로 채팅하면서 파일을 받거나, 음성대화를 나누는 기능 => 멀티쓰레드

문제점 : 같은 프로세스내에서 자원을 공유하면서 작업하기에 동기화, 교착상태와 같은 문제들을 고려해야함.
교착상태란? : 두 쓰레드가 자원을 점유한 상태에서 서로 상대편이 점유한 자원을 사용하려고 기다리느라 진행이 멈춘 상태

[2] 쓰레드의 구현과 실행
1. Thread 클래스를 상속 받아 사용
2. Runnable 인터페이스를 구현하여 사용

static Thread currentThread() : 현재 실행중인 쓰레드의 참조를 반환
String getName() : 쓰레드의 이름을 반환

하나의 쓰레드에 대해 start()를 두 번 이상 호출하면 실행시 예외 발생

두 쓰레드가 서로 다른 자원을 사용하는 작업의 경우에는 싱글쓰레드 프로세스보다 멀티쓰레드 프로세스가 더 효율적

쓰레드는 우선순위라는 속성(멤버변수)을 가지고 있음.
작업의 중요도에 따라 쓰레드의 우선순위를 서로 다르게 지정하여 특정 쓰레드가 더 많은 작업시간을 갖도록 함
EX] 파일전송기능이 있는 메신저 -> 파일다운로드를 처리하는 쓰레드보다 채팅내용을 전송하는 쓰레드의 우선순위가 높아야 사용자가 불편함이 없음.

[5]쓰레드 우선순위 지정하기
void setPriority(int newPriority) : 쓰레드의 우선준위를 지정한 값으로 변경
int getPriority() : 쓰레드의 우선순위를 반환한다.

쓰레드가 가질수 있는 우선순위의 범위 : 1 ~ 10   (숫자가 높을수록 우선순위가 높다.)
main메서드를 수행하는 쓰레드는 우선순위 : 5

우선순위를 부여한다 해도 각각의 OS마다 다른 방식으로 스케쥴링하기때문에 각각 다른 결과를 얻을 수 있다.
차라리 쓰레드에 우선순위를 부여하는 대신 작업에 우선순위를 두어 PriorityQueue에 저장해놓고 우선순위가 높은 작업이 먼저 처리되도록 하는것이 나을 수 있다.

쓰레드 그룹(thread group)
쓰레드 그룹은 서로 관련된 쓰레드를 그룹으로 다루기 위한 것으로, 폴더를 생성해서 관련된 파일들을 함께 넣어서 관리하는 것처럼 관리할 수 있다.
